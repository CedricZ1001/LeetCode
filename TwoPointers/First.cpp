//3. 无重复字符的最长子串
//给定一个字符串 s ，请你找出其中不含有重复字符的 最长子串的长度。
//
//示例 1:
//
//输入: s = "abcabcbb"
//输出 : 3
//解释 : 因为无重复字符的最长子串是 "abc"，所以其长度为 3。
//示例 2 :
//
//输入 : s = "bbbbb"
//输出 : 1
//解释 : 因为无重复字符的最长子串是 "b"，所以其长度为 1。
//示例 3 :
//
//输入 : s = "pwwkew"
//输出 : 3
//解释 : 因为无重复字符的最长子串是 "wke"，所以其长度为 3。
//请注意，你的答案必须是 子串 的长度，"pwke" 是一个子序列，不是子串。
//
//提示：
//
//0 <= s.length <= 5 * 104
//s 由英文字母、数字、符号和空格组成
#include"../Algorithm/Header.h"

class First {
public:
	static int lengthOfLongestSubstring(string s) {
		unordered_set<char> hashSet;
		int maxLength = 0;
		int left = 0, right = 0;
		while (right < s.size() && left <= right) {
			if (hashSet.count(s[right]) == 0) {
				hashSet.emplace(s[right]);
			}
			else {
				while (s[left] != s[right]) {
					hashSet.erase(s[left]);
					left++;
				}
				if (left < right) {
					left++;
				}
			}
			maxLength = max(maxLength, right - left + 1);
			++right;
		}
		return maxLength;
	}
};
